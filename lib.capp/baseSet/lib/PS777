#!/bin/bash
# 命令行提示


if [ "$1" == "newLine" ]; then
    shift
    ps1_u="$1"
    ps1_h="$2"
    ps1_w="$3"
    exitCode=$4

    # NOTE
    # 很久前保留的一段描述
    #     We have color support; assume it's compliant with Ecma-48
    #     (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    #     a case would tend to support setf rather than setaf.)
    # 以及所使用的判斷方式
    #     [ -x /usr/bin/tput ] && tput setaf 1 &> /dev/null && { ... } || :
    # 但在使用 "apline:3.11.5" 的容器時發現
    # 其沒有安裝 `tput` 也可以正常顯示 "\[\033[31;01m\]" 等顏色表示式
    # 故決定在 PS1 上一律顯示顏色

    # "\[\033[31;01m\]" (PS1 適用)
    _fN="\033[00m"
    _fRedB="\033[31;01m"
    _fGreB="\033[32;01m"
    _fYelB="\033[33;01m"
    _fCyaB="\033[36;01m"


    # NOTE
    # 無法使用 `history` 命令
    # export PS777_prevRunTimestamp=`date -u +"%s%3N"`


    printf "${_fGreB}%s@%s${_fN}:${_fCyaB}%s${_fN}" "$ps1_u" "$ps1_h" "$ps1_w"

    if [ $PS777_hasTime -eq 1 ]; then
        printf " [`date -u +"%H:%M:%S.%3N"`]"
    fi

    # exitCode
    [ $exitCode -eq 0 ] || printf " ${_fRedB}(exit:$exitCode)${_fN}"

    PS777_gitStatus() {
        local tmp
        local gitStatusTxt=`git status 2> /dev/null`

        [ -n "$gitStatusTxt" ] || return

        local color txtBranch

        if [ "`sed -n "3p" <<< "$gitStatusTxt"`" != "No commits yet" ]; then
            local ysNotStatusStash=`(
                sed -n "2p" | grep "^\(nothing to commit\|Untracked files\)"
            ) <<< "$gitStatusTxt"`
            [ -n "$ysNotStatusStash" ] && color=$_fGreB || color=$_fYelB

            # `git branch --show-current &> /dev/null` or `git log &> /devnull` 無法隱藏以下錯誤
            # error(fatal: your current branch 'master' does not have any commits yet)
            local currBranch
            # git v2.22.0 才支持 `--show-current`
            currBranch=`git branch --show-current 2> /dev/null`
            [ $? -eq 0 ] || currBranch=`(
                sed -n "1p" | grep "^On branch" | sed "s/^On branch \(.\+\)/\1/"
            ) <<< "$gitStatusTxt"`
            [ -n "$currBranch" ] \
                && txtBranch="$currBranch" \
                || txtBranch="(`git log --pretty=format:"%h" -1`)"
        else
            color=$_fGreB
            txtBranch="---"
        fi

        printf " ${color}[git:$txtBranch]${_fN}"
    }
    PS777_gitStatus

    printf '\n$ '

elif [ "$1" == "init" ]; then
    # 不加 `export` 可以讓同層的 shell 取的到變量，但其子層則無值
    export PS777_hasTime=0

    # https://askubuntu.com/questions/372849
    # PS1="${debian_chroot:+($debian_chroot)}"
    # PS1+="${_fGreB}\u@\h${_fN}:${_fCyaB}\w${_fN}\n$ "
    PS1='`PS777 newLine "\u" "\h" "\w" "$?"`'
fi

