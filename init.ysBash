#!/bin/bash
# 初始化執行文件
# # 依預設固定路徑建立基本環境並執行 `ysBash`。


#---
# Ys 目錄的相對路徑：
#   ─┬ path/to/ys/ ------------ Ys 目錄
#    ├─┬ lib.capp/
#    │ ├─┬ shbase/
#    │ │ └── bin/ ------------- 腳本基礎可執行文件目錄
#    │ └─┬ envtree/
#    │   └── bin/ ------------- YsBash 可執行文件目錄
#    └── init.ysBash --- 初始化 YsBash 執行文件
#---


ysPath=$(dirname "$(realpath "$0")")
ysPath_libCapp="$ysPath/lib.capp"

for envPath in \
    "$ysPath_libCapp/envtree" \
    "$ysPath_libCapp/shbase"
do PATH="$envPath/bin:$PATH"; done

case `uname` in
    *CYGWIN* ) # Cygwin
        # 加速器
        PATH="$ysPath_libCapp/make.cygwin/accelerator:$PATH"
        ;;
esac


#---
# 與 ysBash 不相干的初始化區塊

tmpList=(
    "ln"    "$ysPath/envfile/sharehome/.ys"           "$ysPath"
    "ln"    "$ysPath/envfile/sharehome/Desktop"       "./.ys/gitman/Desktop"
    "touch" "$ysPath/envfile/sharehome/.bash_history"
    "touch" "$ysPath/envfile/sharehome/.bashrc"
    "mkdir" "$ysPath/gitman"
    "mkdir" "$ysPath/gitman/bin"
    "mkdir" "$ysPath/gitman/Desktop"
)
for ((tmpIdx=0, tmpLen=${#tmpList[@]}; tmpIdx < tmpLen ; tmpIdx++))
do
    tmpAdd=1
    tmpMethod=${tmpList[tmpIdx]}
    tmpArguA=${tmpList[tmpIdx + 1]}
    tmpArguB=${tmpList[tmpIdx + 2]}
    case "$tmpMethod" in
        ln )
            [ -e "$tmpArguA" ] || ln -s "$tmpArguB" "$tmpArguA"
            tmpAdd=2
            ;;
        mkdir )
            [ -d "$tmpArguA" ] || mkdir -p "$tmpArguA"
            ;;
        touch )
            [ -f "$tmpArguA" ] || touch "$tmpArguA"
            ;;
    esac
    tmpIdx=$((tmpIdx + tmpAdd))
done

#---


ysBash "$@"

