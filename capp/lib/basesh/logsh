#!/bin/bash
# 日誌


fnMain_argsInfo="<執行文件名稱>
       <紀錄類型 txt|run|warn|finish|error> <紀錄參數>"
fnMain_subCmd="
  tail     等同於 \`tail .logsh.log\`。
  less     等同於 \`less .logsh.log\`。
  grep     等同於 \`grep .logsh.log\`。
  getid    取得上一筆日誌識別碼。
"
fnMain_opt="
  -e, --echo     只顯示於終端機上， 不記錄。
  -r, --record   只記錄於日誌中， 不顯示。
  -h, --help     幫助。
"
fnMain_subCmd_allowList="
 tail less grep getid
"
fnMain_opt_allowList="
 -e --echo 0
 -r --record 0
 -h --help 0
"


__filename=`realpath "$0"`
_dirsh=`dirname "$__filename"`
_binsh=`realpath "$_dirsh/../../bin"`
_libsh=`realpath "$_dirsh/.."`
_fileName=`basename "$0"`

logFile=$_dirsh/.logsh.log
idFile=$_dirsh/.logsh.id.tmp

nowTime=`date "+%Y-%m-%d %H:%M:%S"`


opt_recordMethod=""

fnMain() {
    local tmp opt val

    tmp=`"$_dirsh/parseArgs" getArgs "$0" \
        "$fnMain_subCmd_allowList" "$fnMain_opt_allowList" "$@"`
    case $? in
        0 )
            eval set -- "$tmp"
            ;;
        2 )
            fnSubCmd "$@"
            exit
            ;;
        3 )
            "$_dirsh/parseArgs" showHelp "$fnMain_argsInfo" "$fnMain_subCmd" "$fnMain_opt"
            exit
            ;;
        * )
            "$0" "$_fileName" error "錯誤命令， 訊息：\n$tmp"
            exit 1
            ;;
    esac

    while [ -n 1 ]
    do
        opt=$1
        val=$2

        if [ "$opt" == "--" ]; then
            shift
            break
        fi

        case $opt in
            -e | --echo )
                shift
                opt_recordMethod=$opt_recordMethod"e"
                ;;
            -r | --record )
                shift
                opt_recordMethod=$opt_recordMethod"r"
                ;;
        esac
    done

    fnMainHandle "$@"
}

fnMainHandle() {
    local fileName method msg
    fileName=$1
    method=$2
    msg=$3

    if [ -z "`echo "$fileName" | grep "[A-Za-z0-9_.-]"`" ]; then
        "$0" "$_fileName" error '只能使用 "A-Za-z0-9-_." 字符作為的文件名稱。 ('$fileName')'
        exit 1
    fi

    local tmp logId stamp errMsgFile
    local recordMethod exitCode styleCode outputHead recordHead

    if [ -z "$opt_recordMethod" ]; then
        recordMethod=er
    else
        recordMethod=$opt_recordMethod
    fi

    logId=$(fnRandom6c16)
    stamp="$nowTime $logId"

    exitCode=0
    styleCode=0

    case "$method" in
        "txt" )
            fnMsgHead "$stamp" "$fileName" txt
            outputHead=$rtnMsgHead_outputHead
            recordHead=$rtnMsgHead_recordHead
            ;;
        "run" )
            stamp=`date "+%Y-%m-%d %H:%M:%S"`" $logId"
            fnMsgHead "$stamp" "$fileName" run
            fnRecord $recordMethod "0" "$rtnMsgHead_outputHead" "$rtnMsgHead_recordHead" "\$ $msg"

            errMsgFile=$_dirsh/.logsh.errMsg_${logId}.tmp
            sh -c "$msg" 2> "$errMsgFile"
            tmp=$?
            stamp=`date "+%Y-%m-%d %H:%M:%S"`" $logId"
            if [ $tmp -eq 0 ]; then
                fnMsgHead "$stamp" "$fileName" finish
                outputHead=$rtnMsgHead_outputHead
                recordHead=$rtnMsgHead_recordHead
                msg="日誌識別碼 \"$logId\" 已完成。"
            else
                exitCode=1
                styleCode="01;31"
                fnMsgHead "$stamp" "$fileName" error
                outputHead=$rtnMsgHead_outputHead
                recordHead=$rtnMsgHead_recordHead
                msg="日誌識別碼 \"$logId\" 執行失敗， 訊息："
                tmp=`cat "$errMsgFile" | sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g"`
                if [ -z "$tmp" ]; then
                    msg=$msg" 無。"
                else
                    msg=$msg"\n$tmp"
                fi
            fi
            rm "$errMsgFile"
            ;;
        "warn" )
            styleCode="01;33"
            fnMsgHead "$stamp" "$fileName" warn
            outputHead=$rtnMsgHead_outputHead
            recordHead=$rtnMsgHead_recordHead
            ;;
        "finish" )
            fnMsgHead "$stamp" "$fileName" finish
            outputHead=$rtnMsgHead_outputHead
            recordHead=$rtnMsgHead_recordHead
            ;;
        "error" )
            exitCode=1
            styleCode="01;31"
            fnMsgHead "$stamp" "$fileName" error
            outputHead=$rtnMsgHead_outputHead
            recordHead=$rtnMsgHead_recordHead
            ;;
    esac

    echo $logId > "$idFile"
    fnRecord $recordMethod "$styleCode" "$outputHead" "$recordHead" "$msg"
    if [ $exitCode -eq 1 ]; then
        echo -e "\e[${styleCode}m錯誤日誌識別碼 \"$logId\"\e[00m" 1>&2
        echo -e "\e[${styleCode}m請查看 \`$__filename grep $logId\`\e[00m"
    fi
    exit $exitCode
}

fnSubCmd() {
    local subcmd
    subcmd=$1
    shift

    case $subcmd in
        tail )
            tail "$@" "$logFile"
            exit $?
            ;;
        less )
            less "$@" "$logFile"
            exit $?
            ;;
        grep )
            grep --color "$@" "$logFile"
            exit $?
            ;;
        getid )
            if [ -f "$idFile" ]; then
                cat "$idFile"
                rm "$idFile"
                exit
            else
                exit 1
            fi
            ;;
        * )
            exit 1
            ;;
    esac
}


fnRandom6c16() {
    local num
    num="$RANDOM""$RANDOM"
    num=`printf "%06x" $(( $num % 16777216 ))`
    echo $num
}

fnRecord() {
    local recordMethod styleCode outputHead recordHead msg
    recordMethod=$1
    styleCode=$2
    outputHead=$3
    recordHead=$4
    msg=$5

    local txtOutput txtRecord

    txtOutput=`echo -e "$msg" | sed "s/^/$outputHead/"`
    txtRecord=`echo -e "$msg" | sed "s/^/$recordHead/"`

    if [ -n "`echo $recordMethod | grep "e"`" ]; then
        echo -e "\e[${styleCode}m${txtOutput}\e[00m"
    fi
    if [ -n "`echo $recordMethod | grep "r"`" ]; then
        echo "$txtRecord" >> "$logFile"
    fi
}

rtnMsgHead_outputHead=""
rtnMsgHead_recordHead=""
fnMsgHead() {
    local stamp="$1"
    local fileName="$2"
    local method="$3"

    local outputHead recordHead

    case "$method" in
        "txt" )
            outputHead="[$fileName] [紀錄]: "
            recordHead="$stamp txt [$fileName] [紀錄]: "
            ;;
        "run" )
            outputHead="[$fileName] [執行]: "
            recordHead="$stamp run [$fileName] [執行]: "
            ;;
        "warn" )
            outputHead="[$fileName] [警告]: "
            recordHead="$stamp warn [$fileName] [警告]: "
            ;;
        "finish" )
            outputHead="[$fileName] [完成]: "
            recordHead="$stamp finish [$fileName] [完成]: "
            ;;
        "error" )
            outputHead="[$fileName] [錯誤]: "
            recordHead="$stamp error [$fileName] [錯誤]: "
            ;;
    esac

    rtnMsgHead_outputHead=$outputHead
    rtnMsgHead_recordHead=$recordHead
}

fnMain "$@"

