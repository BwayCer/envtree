#!/bin/bash
# 記事字條


##shStyle 介面函式


fnYsBash_note() {
    local notePath="$1"
    local alartOnNotWordTxt="$2"

    local line

    # 時間戳 timestamp
    echo `date +"%Y-%m-%d %H:%M:%S [%A] +%s%3N"`

    fnPrintRandomColor() {
        local prefix="$1"
        local txt="$2"

        [ -z "$txt" ] && return

        local color=`_fColor $(($RANDOM % 6 + 1)) 1`

        printf "  $prefix $color%s$_fN\n" "$txt"
    }

    # 字條
    if [ ! -f "$notePath" ] || [ -z "`cat "$notePath"`" ]; then
        fnPrintRandomColor x "無字條被留下"
        if [ -n "$alartOnNotWordTxt" ]; then
            fnPrintRandomColor "#" "$alartOnNotWordTxt"
        fi
    else
        while read line
        do
            # 使用 `||` 可解決 $? == 1 的問題
            [ -z "$line" ] || fnPrintRandomColor - "$line"
        done < "$notePath"
    fi
}


##shStyle ###


# source shbase "#fColor"
# 腳本基礎 - 文字色彩

_fN=""
_fRedB=""
_fGreB=""
_fYelB=""

_fColor() {
    local bgcolor underline
    local setFont=$1
    local color=${setFont:0:1}
    local bold=${setFont:1:1}

    [ $_fColor_usable -eq 0 ] && [ $_fColor_isForce -eq 0 ] && return

    if [ "$setFont" == "N" ]; then
        [ $_fColor_isForce -eq 0 ] \
            && printf "`tput sgr0`" \
            || printf "\e[00m"

        return
    fi

    case "$color" in
        [01234567] )
            [ $_fColor_isForce -eq 0 ] \
                && printf "`tput setaf $color`" \
                || printf "\e[3${color}m"
            ;;
    esac

    if [ "$bold" == "1" ]; then
        [ $_fColor_isForce -eq 0 ] \
            && printf "`tput bold`" \
            || printf "\e[01m"
    fi

    [ $setFont -lt 100 ] && return

    bgcolor=${1:2:1}
    underline=${1:3:1}

    case "$bgcolor" in
        [01234567] )
            [ $_fColor_isForce -eq 0 ] \
                && printf "`tput setab $bgcolor`" \
                || printf "\e[4${bgcolor}m"
            ;;
    esac

    if [ "$underline" == "1" ]; then
        [ $_fColor_isForce -eq 0 ] \
            && printf "`tput smul`" \
            || printf "\e[04m"
    fi
}

_fColor_usable=0
_fColor_isForce=0

tmp=`tput colors`
[ -t 1 ] && [ -n "$tmp" ] && [ $tmp -ge 8 ] && _fColor_usable=1

_fColor_force() {
    [ "$1" == 1 ] && _fColor_isForce=1
    _fN=`_fColor N`
    _fRedB=`_fColor 1 1`
    _fGreB=`_fColor 2 1`
    _fYelB=`_fColor 3 1`
}


##shStyle ###


fnYsBash_note "$@"

