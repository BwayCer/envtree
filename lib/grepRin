#!/bin/bash
# 凜搜尋


##shStyle 介面函式


# 凜搜尋
# [[USAGE]] <關鍵字 (正規表示)> <起始路徑>
# [[OPT]]
#   -n, --name      僅搜尋文件名稱。
#   -c, --content   僅搜尋文件內容。
#   -h, --help      幫助。

fnGrepRin__filename=`realpath "$0"`
fnGrepRin_fileName=`basename "$fnGrepRin__filename"`

fnGrepRin() {
    local method="$1"

    case "$method" in
        FINDEXECOPT )
            shift
            fnGrepRin_findexecopt "$@"
            exit
            ;;
    esac

    local opt_name=0
    local opt_content=0

    while [ -n "y" ]
    do
        case "$1" in
            -nc | -cn )
                opt_name=1
                opt_content=1
                shift
                ;;
            -n | --name )
                opt_name=1
                shift
                ;;
            -c | --content )
                opt_content=1
                shift
                ;;
            -h | --help )
                "${fnGrepRin__filename}.help" "$fnGrepRin_fileName" "fnGrepRin"
                exit
                ;;
            * ) break ;;
        esac
    done

    if [ $((opt_name + opt_content)) -eq 0 ]; then
        opt_name=1
        opt_content=1
    fi

    local keyword="$1"
    local originPath=`realpath "$2"`
    tmp=$?; [ $tmp -eq 0 ] || exit $tmp

    find "$originPath" -exec "$fnGrepRin__filename" "FINDEXECOPT" \
        "${opt_content}${opt_name}" "$keyword" "{}" \;
}
fnGrepRin_findexecopt() {
    local optCode="$1"
    local keyword="$2"
    local thePath="$3"

    local baseName
    local isHasMatch=0
    local title="--> $thePath"

    # name
    if [[ "$optCode" =~ 1.{0}$ ]]; then
        baseName=`basename "$thePath"`
        if grep -qi "$keyword" <<< "$baseName" ; then
            [ $isHasMatch -eq 0 ] && echo "$title"
            isHasMatch=1

            echo "　path : `fnGrepRin_paint "$keyword" <<< "$thePath"`"
            echo ~~
       fi
    fi

    # content
    if [ -f "$thePath" ] && [ ! -L "$thePath" ] && [[ "$optCode" =~ 1.{1}$ ]]; then
        if grep -qi "$keyword" "$thePath" ; then
            [ $isHasMatch -eq 0 ] && echo "$title"
            isHasMatch=1

            # `\` 會有跨行問題
            grep -ni -B 2 -A 2 "$keyword" "$thePath" \
                | sed 's/\([\\]\)/\\\\\\\1/g' \
                | fnGrepRin_grepTable | fnGrepRin_paint "$keyword"
        fi
    fi

    [ $isHasMatch -eq 0 ] || echo
}
fnGrepRin_grepTable() {
    local _stdin=`[ ! -t 0 ] && while read pipeData; do echo "$pipeData"; done <&0`

    local separator="蠹龜茕踽"
    local lineNumberCount=`grep -o "^[0-9]\+-" <<< "$_stdin" | wc -L`

    sed "s/^\([0-9]\+\)[:-]\(.*\)$/\1$separator\2$separator/" <<< "$_stdin" \
        | awk -F "$separator" "{printf \"　%${lineNumberCount}s : %s\n\", \$1, \$2}" \
        | sed "s/^　 *-- : *$/~~/"
}
fnGrepRin_paint() {
    local _stdin=`[ ! -t 0 ] && while read pipeData; do echo "$pipeData"; done <&0`

    local keyword="$1"

    if [ -n "$fnGrepRin_paint_fN" ]; then
        sed "s/\($keyword\)/$fnGrepRin_paint_f310\1$fnGrepRin_paint_fN/gi" <<< "$_stdin"
    else
        echo "$_stdin"
    fi
}
# 是否輸出至終端
if [ -t 1 ]; then
    fnGrepRin_paint_fN=`tput sgr0`
    fnGrepRin_paint_f310=`tput setaf 3; tput bold; tput setab 0`
fi


##shStyle ###


fnGrepRin "$@"

