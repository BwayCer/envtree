#!/bin/bash
# 執行環境建立文件


##shStyle ###


source shbase "#loxog"


##shStyle 共享變數


_br="
"

ysPath=""
envCode=-1


##shStyle 介面函式


fnYsBash_build() {
    local _fileName="$1"
    local ysPathArge="$2"
    local envCodeArge=$3
    local ysBashBuildPath="$4"
    local onlyLine="$5"

    if [ ! -f "$ysBashBuildPath" ]; then
        loxog -f "$_fileName" war \
            "環境樹未被建立，請執行 \`$_fileName plant --build\`。"
        exit 1
    fi

    if [ -z "`cat "$ysBashBuildPath"`" ]; then
        exit
    fi

    local lineIdx line fileName

    ysPath=$ysPathArge
    envCode=$envCodeArge

    echo
    echo "=============================="
    echo "===    執行環境安裝文件    ==="
    echo "=============================="
    echo

    lineIdx=0
    while read line
    do
        ((lineIdx++))
        [ -n "$line" ] && [ "${line::1}" != "#" ] || continue
        [ -n "$onlyLine" ] && [ -z "`grep -Fo ",$lineIdx," <<< ",$onlyLine,"`" ] \
            && continue || echo -n

        echo "$_br$_br=== $line ===$_br"

        # 文件路徑資訊
        __filename=`realpath "$line"`
        _dirsh=`dirname "$__filename"`
        _fileName=`basename "$__filename"`

        # 於執行文件中可使用外層既有的變數 (類似 source)
        # 但文件中設定的變數不會影響外層變數
        echo "$line" | while read fileName; do source "$fileName" "$fileName"; done
    done <<< "`cat "$ysBashBuildPath"`"
}


##shStyle ###


fnYsBash_build "$@"

