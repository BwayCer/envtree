env:
  browser: true
  commonjs: true
  es6: true
  node: true
extends: 'eslint:recommended'
parserOptions:
  sourceType: module
rules:
  ## Possible Errors:
  ##   這些規則涉及 JavaScript 程式碼中可能的語法或邏輯錯誤
  ##   These rules relate to possible syntax or logic errors in JavaScript code
  #> https://eslint.org/docs/rules/for-direction
  #   - enforce “for” loop update clause moving the counter in the right direction.
  #> https://eslint.org/docs/rules/getter-return
  #   - enforce return statements in getters
  # https://eslint.org/docs/rules/no-await-in-loop
  #   - disallow await inside of loops
  #> https://eslint.org/docs/rules/no-compare-neg-zero
  #   - disallow comparing against -0
  #> https://eslint.org/docs/rules/no-cond-assign
  #   - disallow assignment operators in conditional expressions
  #> https://eslint.org/docs/rules/no-console
  # 不允許使用 console
  #   - disallow the use of console
  no-console:
    - warn
  #> https://eslint.org/docs/rules/no-constant-condition
  #   - disallow constant expressions in conditions
  #> https://eslint.org/docs/rules/no-control-regex
  #   - disallow control characters in regular expressions
  #> https://eslint.org/docs/rules/no-debugger
  # 不允許使用 debugger
  #   - disallow the use of debugger
  no-debugger:
    - warn
  #> https://eslint.org/docs/rules/no-dupe-args
  # 不允許重複的參數名出現在函式聲明中
  #   - disallow duplicate arguments in function definitions
  #> https://eslint.org/docs/rules/no-dupe-keys
  #   - disallow duplicate keys in object literals
  #> https://eslint.org/docs/rules/no-duplicate-case
  #   - disallow duplicate case labels
  #> https://eslint.org/docs/rules/no-empty
  #   - disallow empty block statements
  #> https://eslint.org/docs/rules/no-empty-character-class
  #   - disallow empty character classes in regular expressions
  #> https://eslint.org/docs/rules/no-ex-assign
  #   - disallow reassigning exceptions in catch clauses
  #> https://eslint.org/docs/rules/no-extra-boolean-cast
  #   - disallow unnecessary boolean casts
  # https://eslint.org/docs/rules/no-extra-parens
  # 不允許使用不必要的括號
  #   - disallow unnecessary parentheses
  #> https://eslint.org/docs/rules/no-extra-semi
  #   - disallow unnecessary semicolons
  #> https://eslint.org/docs/rules/no-func-assign
  # 不允許重新分配 function 聲明
  #   - disallow reassigning function declarations
  #> https://eslint.org/docs/rules/no-inner-declarations
  # 不允許變量或函式聲明於巢狀塊中（提升問題）
  #   - disallow variable or function declarations in nested blocks
  #> https://eslint.org/docs/rules/no-invalid-regexp
  #   - disallow invalid regular expression strings in RegExp constructors
  #> https://eslint.org/docs/rules/no-irregular-whitespace
  #   - disallow irregular whitespace outside of strings and comments
  #> https://eslint.org/docs/rules/no-obj-calls
  # 不允許調用全局對象屬性（Math，JSON、Reflect）作為函數
  #    disallow calling global object properties as functions
  # https://eslint.org/docs/rules/no-prototype-builtins
  #   - disallow calling some Object.prototype methods directly on objects
  #> https://eslint.org/docs/rules/no-regex-spaces
  #   - disallow multiple spaces in regular expressions
  #> https://eslint.org/docs/rules/no-sparse-arrays
  #   - disallow sparse arrays
  # https://eslint.org/docs/rules/no-template-curly-in-string
  #   - disallow template literal placeholder syntax in regular strings
  #> https://eslint.org/docs/rules/no-unexpected-multiline
  #   - disallow confusing multiline expressions
  #> https://eslint.org/docs/rules/no-unreachable
  #   - disallow unreachable code after return, throw, continue, and break statements
  #> https://eslint.org/docs/rules/no-unsafe-finally
  #   - disallow control flow statements in finally blocks
  #> https://eslint.org/docs/rules/no-unsafe-negation
  #   - disallow negating the left operand of relational operators
  #> https://eslint.org/docs/rules/use-isnan
  #   - require calls to isNaN() when checking for NaN
  # https://eslint.org/docs/rules/valid-jsdoc
  # 強制包含 JSDoc 的註釋為有效的內容（eslint 不建議開啟）
  #   - enforce valid JSDoc comments
  #> https://eslint.org/docs/rules/valid-typeof
  #   - enforce comparing typeof expressions against valid strings

  ## Best Practices
  ##   這些規則涉及更好的做事方式，以幫助您避免問題
  ##   These rules relate to better ways of doing things to help you avoid problems
  # https://eslint.org/docs/rules/accessor-pairs
  #   - enforce getter and setter pairs in objects
  # https://eslint.org/docs/rules/array-callback-return
  #   - enforce return statements in callbacks of array methods
  # https://eslint.org/docs/rules/block-scoped-var
  #   - enforce the use of variables within the scope they are defined
  # https://eslint.org/docs/rules/class-methods-use-this
  #   - enforce that class methods utilize this
  # https://eslint.org/docs/rules/complexity
  #   - enforce a maximum cyclomatic complexity allowed in a program
  # https://eslint.org/docs/rules/consistent-return
  #   - require return statements to either always or never specify values
  # https://eslint.org/docs/rules/curly
  #   - enforce consistent brace style for all control statements
  # https://eslint.org/docs/rules/default-case
  #   - require default cases in switch statements
  # https://eslint.org/docs/rules/dot-location
  #   - enforce consistent newlines before and after dots
  # https://eslint.org/docs/rules/dot-notation
  #   - enforce dot notation whenever possible
  # https://eslint.org/docs/rules/eqeqeq
  #   - require the use of === and !==
  # https://eslint.org/docs/rules/guard-for-in
  #   - require for-in loops to include an if statement
  # https://eslint.org/docs/rules/max-classes-per-file
  #   - enforce a maximum number of classes per file
  # https://eslint.org/docs/rules/no-alert
  #   - disallow the use of alert, confirm, and prompt
  # https://eslint.org/docs/rules/no-caller
  #   - disallow the use of arguments.caller or arguments.callee
  #> https://eslint.org/docs/rules/no-case-declarations
  #   - disallow lexical declarations in case clauses
  # https://eslint.org/docs/rules/no-div-regex
  #   - disallow division operators explicitly at the beginning of regular expressions
  # https://eslint.org/docs/rules/no-else-return
  #   - disallow else blocks after return statements in if statements
  #> https://eslint.org/docs/rules/no-empty-function
  # 不允許空函式
  #   - disallow empty functions
  no-empty-function:
    - warn
  #> https://eslint.org/docs/rules/no-empty-pattern
  #   - disallow empty destructuring patterns
  # https://eslint.org/docs/rules/no-eq-null
  #   - disallow null comparisons without type-checking operators
  # https://eslint.org/docs/rules/no-eval
  #   - disallow the use of eval()
  # https://eslint.org/docs/rules/no-extend-native
  #   - disallow extending native types
  # https://eslint.org/docs/rules/no-extra-bind
  #   - disallow unnecessary calls to .bind()
  # https://eslint.org/docs/rules/no-extra-label
  #   - disallow unnecessary labels
  #> https://eslint.org/docs/rules/no-fallthrough
  #   - disallow fallthrough of case statements
  # https://eslint.org/docs/rules/no-floating-decimal
  #   - disallow leading or trailing decimal points in numeric literals
  #> https://eslint.org/docs/rules/no-global-assign
  #   - disallow assignments to native objects or read-only global variables
  # https://eslint.org/docs/rules/no-implicit-coercion
  #   - disallow shorthand type conversions
  # https://eslint.org/docs/rules/no-implicit-globals
  # 不允許變量或函式在全域中聲明
  #   - disallow variable and function declarations in the global scope
  # https://eslint.org/docs/rules/no-implied-eval
  #   - disallow the use of eval()-like methods
  # https://eslint.org/docs/rules/no-invalid-this
  #   - disallow this keywords outside of classes or class-like objects
  # https://eslint.org/docs/rules/no-iterator
  #   - disallow the use of the __iterator__ property
  # https://eslint.org/docs/rules/no-labels
  #   - disallow labeled statements
  # https://eslint.org/docs/rules/no-lone-blocks
  #   - disallow unnecessary nested blocks
  # https://eslint.org/docs/rules/no-loop-func
  # 不允許函數聲明或表達式在循環語句中（var 沒有塊作用域問題）
  #   - disallow function declarations and expressions inside loop statements
  # https://eslint.org/docs/rules/no-magic-numbers
  #   - disallow magic numbers
  # https://eslint.org/docs/rules/no-multi-spaces
  #   - disallow multiple spaces
  # https://eslint.org/docs/rules/no-multi-str
  #   - disallow multiline strings
  # https://eslint.org/docs/rules/no-new
  #   - disallow new operators outside of assignments or comparisons
  # https://eslint.org/docs/rules/no-new-func
  # 不允許實例化 Function 類物件（當使用 eval 解析時會比一般的函式更耗時）
  #   - disallow new operators with the Function object
  # https://eslint.org/docs/rules/no-new-wrappers
  #   - disallow new operators with the String, Number, and Boolean objects
  #> https://eslint.org/docs/rules/no-octal
  #   - disallow octal literals
  # https://eslint.org/docs/rules/no-octal-escape
  #   - disallow octal escape sequences in string literals
  #> https://eslint.org/docs/rules/no-param-reassign
  # 不允許重新分配函數參數
  #   - disallow reassigning function parameters
  #   - 若是修改函數參數的成員則允許
  no-param-reassign:
    - error
    - props: false
  # https://eslint.org/docs/rules/no-proto
  #   - disallow the use of the __proto__ property
  #> https://eslint.org/docs/rules/no-redeclare
  #   - disallow variable redeclaration
  # https://eslint.org/docs/rules/no-restricted-properties
  #   - disallow certain properties on certain objects
  # https://eslint.org/docs/rules/no-return-assign
  #   - disallow assignment operators in return statements
  # https://eslint.org/docs/rules/no-return-await
  #   - disallow unnecessary return await
  # https://eslint.org/docs/rules/no-script-url
  #   - disallow javascript: urls
  #> https://eslint.org/docs/rules/no-self-assign
  #   - disallow assignments where both sides are exactly the same
  # https://eslint.org/docs/rules/no-self-compare
  #   - disallow comparisons where both sides are exactly the same
  # https://eslint.org/docs/rules/no-sequences
  #   - disallow comma operators
  # https://eslint.org/docs/rules/no-throw-literal
  #   - disallow throwing literals as exceptions
  # https://eslint.org/docs/rules/no-unmodified-loop-condition
  #   - disallow unmodified loop conditions
  # https://eslint.org/docs/rules/no-unused-expressions
  #   - disallow unused expressions
  #> https://eslint.org/docs/rules/no-unused-labels
  #   - disallow unused labels
  # https://eslint.org/docs/rules/no-useless-call
  #   - disallow unnecessary calls to .call() and .apply()
  # https://eslint.org/docs/rules/no-useless-concat
  #   - disallow unnecessary concatenation of literals or template literals
  #> https://eslint.org/docs/rules/no-useless-escape
  #   - disallow unnecessary escape characters
  # https://eslint.org/docs/rules/no-useless-return
  #   - disallow redundant return statements
  # https://eslint.org/docs/rules/no-void
  #   - disallow void operators
  # https://eslint.org/docs/rules/no-warning-comments
  #   - disallow specified warning terms in comments
  # https://eslint.org/docs/rules/no-with
  #   - disallow with statements
  # https://eslint.org/docs/rules/prefer-promise-reject-errors
  #   - require using Error objects as Promise rejection reasons
  # https://eslint.org/docs/rules/radix
  #   - enforce the consistent use of the radix argument when using parseInt()
  # https://eslint.org/docs/rules/require-await
  # 不允許沒有 await 表達式的異步函式
  #   - disallow async functions which have no await expression
  # https://eslint.org/docs/rules/vars-on-top
  #   - require var declarations be placed at the top of their containing scope
  # https://eslint.org/docs/rules/wrap-iife
  # 要求立即函數的調用需要圍繞括號
  #   - require parentheses around immediate function invocations
  #   - ex: void (function () {})(); var fn = (function () {})();
  #   - 個人偏好：
  #     - void function () {}();      // 正常執行時無括號
  #     - var fn = function () {}();  // 正常執行時無括號
  #     - !function () {}();          // 正常執行時無括號
  #     - (function () {})();         // 私有域函式時內括號
  #     - if ((function () {}())) {}; // 判斷式時外括號
  # https://eslint.org/docs/rules/yoda
  #   - require or disallow “Yoda” conditions

  ## Strict Mode
  ##   這些規則涉嚴格模式命令
  ##   These rules relate to strict mode directives
  # https://eslint.org/docs/rules/strict
  #   - require or disallow strict mode directives

  ## Variables
  ##   這些規則涉變數命令
  ##   These rules relate to variable declarations
  # https://eslint.org/docs/rules/init-declarations
  #   - require or disallow initialization in variable declarations
  # https://eslint.org/docs/rules/no-catch-shadow
  #   - disallow catch clause parameters from shadowing variables in the outer scope
  #> https://eslint.org/docs/rules/no-delete-var
  #   - disallow deleting variables
  # https://eslint.org/docs/rules/no-label-var
  #   - disallow labels that share a name with a variable
  # https://eslint.org/docs/rules/no-restricted-globals
  #   - disallow specified global variables
  # https://eslint.org/docs/rules/no-shadow
  #   - disallow variable declarations from shadowing variables declared in the outer scope
  # https://eslint.org/docs/rules/no-shadow-restricted-names
  #   - disallow identifiers from shadowing restricted names
  #> https://eslint.org/docs/rules/no-undef
  #   - disallow the use of undeclared variables unless mentioned in /*global */ comments
  # https://eslint.org/docs/rules/no-undef-init
  #   - disallow initializing variables to undefined
  # https://eslint.org/docs/rules/no-undefined
  #   - disallow the use of undefined as an identifier
  #> https://eslint.org/docs/rules/no-unused-vars
  # 不允許未被使用的變量
  #   - disallow unused variables
  # https://eslint.org/docs/rules/no-use-before-define
  #   - disallow the use of variables before they are defined

  ## Node.js and CommonJS
  ##   這些規則涉及程式碼是運行於 Node.js 或使用 CommonJS 的瀏覽器
  ##   These rules relate to code running in Node.js, or in browsers with CommonJS
  # https://eslint.org/docs/rules/callback-return
  #   - require return statements after callbacks
  # https://eslint.org/docs/rules/global-require
  #   - require require() calls to be placed at top-level module scope
  # https://eslint.org/docs/rules/handle-callback-err
  #   - require error handling in callbacks
  # https://eslint.org/docs/rules/no-buffer-constructor
  #   - disallow use of the Buffer() constructor
  # https://eslint.org/docs/rules/no-mixed-requires
  #   - disallow require calls to be mixed with regular variable declarations
  # https://eslint.org/docs/rules/no-new-require
  #   - disallow new operators with calls to require
  # https://eslint.org/docs/rules/no-path-concat
  #   - disallow string concatenation with __dirname and __filename
  # https://eslint.org/docs/rules/no-process-env
  #   - disallow the use of process.env
  # https://eslint.org/docs/rules/no-process-exit
  #   - disallow the use of process.exit()
  # https://eslint.org/docs/rules/no-restricted-modules
  #   - disallow specified modules when loaded by require
  # https://eslint.org/docs/rules/no-sync
  #   - disallow synchronous methods

  ## Stylistic Issues
  ##   這些規則涉及風格指南，因此非常主觀
  ##   These rules relate to style guidelines, and are therefore quite subjective
  # https://eslint.org/docs/rules/array-bracket-newline
  #   - enforce linebreaks after opening and before closing array brackets
  # https://eslint.org/docs/rules/array-bracket-spacing
  #   - enforce consistent spacing inside array brackets
  # https://eslint.org/docs/rules/array-element-newline
  #   - enforce line breaks after each array element
  # https://eslint.org/docs/rules/block-spacing
  #   - disallow or enforce spaces inside of blocks after opening block and before closing block
  # https://eslint.org/docs/rules/brace-style
  #   - enforce consistent brace style for blocks
  # https://eslint.org/docs/rules/camelcase
  #   - enforce camelcase naming convention
  # https://eslint.org/docs/rules/capitalized-comments
  #   - enforce or disallow capitalization of the first letter of a comment
  # https://eslint.org/docs/rules/comma-dangle
  #   - require or disallow trailing commas
  # https://eslint.org/docs/rules/comma-spacing
  #   - enforce consistent spacing before and after commas
  # https://eslint.org/docs/rules/comma-style
  #   - enforce consistent comma style
  # https://eslint.org/docs/rules/computed-property-spacing
  #   - enforce consistent spacing inside computed property brackets
  # https://eslint.org/docs/rules/consistent-this
  #   - enforce consistent naming when capturing the current execution context
  # https://eslint.org/docs/rules/eol-last
  #   - require or disallow newline at the end of files
  #> https://eslint.org/docs/rules/func-call-spacing
  # 要求或不允許調用標識符與其調用之間的間隔
  # - require or disallow spacing between function identifiers and their invocations
  # - 不允許
  func-call-spacing:
    - error
    - never
  # https://eslint.org/docs/rules/func-name-matching
  #   - require function names to match the name of the variable or property to which they are assigned
  # https://eslint.org/docs/rules/func-names
  #   - require or disallow named function expressions
  # https://eslint.org/docs/rules/func-style
  #   - enforce the consistent use of either function declarations or expressions
  # https://eslint.org/docs/rules/function-paren-newline
  #   - enforce consistent line breaks inside function parentheses
  # https://eslint.org/docs/rules/id-blacklist
  #   - disallow specified identifiers
  # https://eslint.org/docs/rules/id-length
  #   - enforce minimum and maximum identifier lengths
  # https://eslint.org/docs/rules/id-match
  #   - require identifiers to match a specified regular expression
  # https://eslint.org/docs/rules/implicit-arrow-linebreak
  #   - enforce the location of arrow function bodies
  #> https://eslint.org/docs/rules/indent
  # 強制一致的縮排
  #   - enforce consistent indentation
  #   - 4 格空白
  indent:
    - error
    - 4
  # https://eslint.org/docs/rules/jsx-quotes
  #   - enforce the consistent use of either double or single quotes in JSX attributes
  # https://eslint.org/docs/rules/key-spacing
  #   - enforce consistent spacing between keys and values in object literal properties
  # https://eslint.org/docs/rules/keyword-spacing
  #   - enforce consistent spacing before and after keywords
  # https://eslint.org/docs/rules/line-comment-position
  #   - enforce position of line comments
  #> https://eslint.org/docs/rules/linebreak-style
  # 強制一致的換行樣式
  #   - enforce consistent linebreak style
  #   - unix
  linebreak-style:
    - error
    - unix
  # https://eslint.org/docs/rules/lines-around-comment
  #   - require empty lines around comments
  # https://eslint.org/docs/rules/lines-between-class-members
  #   - require or disallow an empty line between class members
  # https://eslint.org/docs/rules/max-depth
  #   - enforce a maximum depth that blocks can be nested
  # https://eslint.org/docs/rules/max-len
  #   - enforce a maximum line length
  # https://eslint.org/docs/rules/max-lines
  #   - enforce a maximum number of lines per file
  # https://eslint.org/docs/rules/max-nested-callbacks
  #   - enforce a maximum depth that callbacks can be nested
  # https://eslint.org/docs/rules/max-params
  #   - enforce a maximum number of parameters in function definitions
  # https://eslint.org/docs/rules/max-statements
  #   - enforce a maximum number of statements allowed in function blocks
  # https://eslint.org/docs/rules/max-statements-per-line
  #   - enforce a maximum number of statements allowed per line
  # https://eslint.org/docs/rules/multiline-comment-style
  #   - enforce a particular style for multiline comments
  # https://eslint.org/docs/rules/multiline-ternary
  #   - enforce newlines between operands of ternary expressions
  # https://eslint.org/docs/rules/new-cap
  #   - require constructor names to begin with a capital letter
  # https://eslint.org/docs/rules/new-parens
  #   - require parentheses when invoking a constructor with no arguments
  # https://eslint.org/docs/rules/newline-per-chained-call
  #   - require a newline after each call in a method chain
  # https://eslint.org/docs/rules/no-array-constructor
  #   - disallow Array constructors
  # https://eslint.org/docs/rules/no-bitwise
  #   - disallow bitwise operators
  # https://eslint.org/docs/rules/no-continue
  #   - disallow continue statements
  # https://eslint.org/docs/rules/no-inline-comments
  #   - disallow inline comments after code
  # https://eslint.org/docs/rules/no-lonely-if
  #   - disallow if statements as the only statement in else blocks
  # https://eslint.org/docs/rules/no-mixed-operators
  #   - disallow mixed binary operators
  #> https://eslint.org/docs/rules/no-mixed-spaces-and-tabs
  #   - disallow mixed spaces and tabs for indentation
  # https://eslint.org/docs/rules/no-multi-assign
  #   - disallow use of chained assignment expressions
  # https://eslint.org/docs/rules/no-multiple-empty-lines
  #   - disallow multiple empty lines
  # https://eslint.org/docs/rules/no-negated-condition
  #   - disallow negated conditions
  # https://eslint.org/docs/rules/no-nested-ternary
  #   - disallow nested ternary expressions
  # https://eslint.org/docs/rules/no-new-object
  #   - disallow Object constructors
  # https://eslint.org/docs/rules/no-plusplus
  #   - disallow the unary operators ++ and --
  # https://eslint.org/docs/rules/no-restricted-syntax
  #   - disallow specified syntax
  # https://eslint.org/docs/rules/no-tabs
  #   - disallow all tabs
  # https://eslint.org/docs/rules/no-ternary
  #   - disallow ternary operators
  # https://eslint.org/docs/rules/no-trailing-spaces
  #   - disallow trailing whitespace at the end of lines
  # https://eslint.org/docs/rules/no-underscore-dangle
  #   - disallow dangling underscores in identifiers
  # https://eslint.org/docs/rules/no-unneeded-ternary
  #   - disallow ternary operators when simpler alternatives exist
  # https://eslint.org/docs/rules/no-whitespace-before-property
  #   - disallow whitespace before properties
  # https://eslint.org/docs/rules/nonblock-statement-body-position
  #   - enforce the location of single-line statements
  # https://eslint.org/docs/rules/object-curly-newline
  #   - enforce consistent line breaks inside braces
  # https://eslint.org/docs/rules/object-curly-spacing
  #   - enforce consistent spacing inside braces
  # https://eslint.org/docs/rules/object-property-newline
  #   - enforce placing object properties on separate lines
  # https://eslint.org/docs/rules/one-var
  #   - enforce variables to be declared either together or separately in functions
  # https://eslint.org/docs/rules/one-var-declaration-per-line
  #   - require or disallow newlines around variable declarations
  # https://eslint.org/docs/rules/operator-assignment
  #   - require or disallow assignment operator shorthand where possible
  # https://eslint.org/docs/rules/operator-linebreak
  #   - enforce consistent linebreak style for operators
  # https://eslint.org/docs/rules/padded-blocks
  #   - require or disallow padding within blocks
  # https://eslint.org/docs/rules/padding-line-between-statements
  #   - require or disallow padding lines between statements
  # https://eslint.org/docs/rules/prefer-object-spread
  #   - disallow using Object.assign with an object literal as the first argument and prefer the use of object spread instead.
  # https://eslint.org/docs/rules/quote-props
  #   - require quotes around object literal property names
  #> https://eslint.org/docs/rules/quotes
  # 強制使用一致的反引號(`)、雙或單引號
  #   - enforce the consistent use of either backticks,
  #     double, or single quotes
  #   - 單引號
  quotes:
    - error
    - single
  # https://eslint.org/docs/rules/require-jsdoc
  #   - require JSDoc comments
  #> https://eslint.org/docs/rules/semi
  # 要求或不允許使用分號而不是 ASI
  #   - require or disallow semicolons instead of ASI
  #   - 要求使用分號
  semi:
    - error
    - always
  # https://eslint.org/docs/rules/semi-spacing
  #   - enforce consistent spacing before and after semicolons
  # https://eslint.org/docs/rules/semi-style
  #   - enforce location of semicolons
  # https://eslint.org/docs/rules/sort-keys
  #   - require object keys to be sorted
  # https://eslint.org/docs/rules/sort-vars
  #   - require variables within the same declaration block to be sorted
  # https://eslint.org/docs/rules/space-before-blocks
  #   - enforce consistent spacing before blocks
  #> https://eslint.org/docs/rules/space-before-function-paren
  # 要求或不允許使用空白在函式括號之前
  #   - Require or disallow a space before function parenthesis
  #   - 命名函式 不空格
  #   - 匿名函式 空格
  #   - 箭頭函式異步宣告 空格 `async () => {}`
  space-before-function-paren:
    - error
    - named: never
      anonymous: always
      asyncArrow: always
  # https://eslint.org/docs/rules/space-in-parens
  #   - enforce consistent spacing inside parentheses
  # https://eslint.org/docs/rules/space-infix-ops
  #   - require spacing around infix operators
  # https://eslint.org/docs/rules/space-unary-ops
  #   - enforce consistent spacing before or after unary operators
  # https://eslint.org/docs/rules/spaced-comment
  #   - enforce consistent spacing after the // or /* in a comment
  # https://eslint.org/docs/rules/switch-colon-spacing
  #   - enforce spacing around colons of switch statements
  # https://eslint.org/docs/rules/template-tag-spacing
  #   - require or disallow spacing between template tags and their literals
  # https://eslint.org/docs/rules/unicode-bom
  #   - require or disallow Unicode byte order mark (BOM)
  # https://eslint.org/docs/rules/wrap-regex
  #   - require parenthesis around regex literals

  ## ECMAScript 6
  ##   這些規則涉及 ES6(ES2015)
  ##   These rules relate to ES6, also known as ES2015:
  # https://eslint.org/docs/rules/arrow-body-style
  #   - require braces around arrow function bodies
  # https://eslint.org/docs/rules/arrow-parens
  #   - require parentheses around arrow function arguments
  # https://eslint.org/docs/rules/arrow-spacing
  # 要求在箭頭函數的箭頭前後需要空白
  #   - Require space before/after arrow function’s arrow
  #> https://eslint.org/docs/rules/constructor-super
  #   - require super() calls in constructors
  #> https://eslint.org/docs/rules/generator-star-spacing
  # 強制一致的間距在 * 操作符前後
  #   - enforce consistent spacing around * operators in generator functions
  #   - 由於有
  #     `var o = { * generator() {} };`
  #     `function * generator() {}`
  #     `class Class { static * method() {} }`
  #     等寫法 故認為 * 粘於名稱前比較一致
  generator-star-spacing:
    - error
    - before: true
      after: false
  #> https://eslint.org/docs/rules/no-class-assign
  #   - disallow reassigning class members
  # https://eslint.org/docs/rules/no-confusing-arrow
  # 不允許可能與比較表達式混淆的箭頭函式
  #   - disallow arrow functions where they could be confused with comparisons
  #> https://eslint.org/docs/rules/no-const-assign
  #   - disallow reassigning const variables
  #> https://eslint.org/docs/rules/no-dupe-class-members
  #   - disallow duplicate class members
  # https://eslint.org/docs/rules/no-duplicate-imports
  #   - disallow duplicate module imports
  #> https://eslint.org/docs/rules/no-new-symbol
  #   - disallow new operators with the Symbol object
  # https://eslint.org/docs/rules/no-restricted-imports
  #   - disallow specified modules when loaded by import
  #> https://eslint.org/docs/rules/no-this-before-super
  #   - disallow this/super before calling super() in constructors
  # https://eslint.org/docs/rules/no-useless-computed-key
  #   - disallow unnecessary computed property keys in object literals
  # https://eslint.org/docs/rules/no-useless-constructor
  #   - disallow unnecessary constructors
  # https://eslint.org/docs/rules/no-useless-rename
  #   - disallow renaming import, export, and destructured assignments to the same name
  # https://eslint.org/docs/rules/no-var
  #   - require let or const instead of var
  # https://eslint.org/docs/rules/object-shorthand
  #   - require or disallow method and property shorthand syntax for object literals
  # https://eslint.org/docs/rules/prefer-arrow-callback
  # 要求回調函式使用箭頭函式
  #   - require using arrow functions for callbacks
  # https://eslint.org/docs/rules/prefer-const
  #   - require const declarations for variables that are never reassigned after declared
  # https://eslint.org/docs/rules/prefer-destructuring
  #   - require destructuring from arrays and/or objects
  # https://eslint.org/docs/rules/prefer-numeric-literals
  #   - disallow parseInt() and Number.parseInt() in favor of binary, octal, and hexadecimal literals
  # https://eslint.org/docs/rules/prefer-rest-params
  #   - require rest parameters instead of arguments
  # https://eslint.org/docs/rules/prefer-spread
  #   - require spread operators instead of .apply()
  # https://eslint.org/docs/rules/prefer-template
  #   - require template literals instead of string concatenation
  #> https://eslint.org/docs/rules/require-yield
  # 不允許沒有 yield 的產生器函數
  #   - Disallow generator functions that do not have yield
  require-yield:
      - error
  # https://eslint.org/docs/rules/rest-spread-spacing
  #   - enforce spacing between rest and spread operators and their expressions
  # https://eslint.org/docs/rules/sort-imports
  #   - enforce sorted import declarations within modules
  # https://eslint.org/docs/rules/symbol-description
  #   - require symbol descriptions
  # https://eslint.org/docs/rules/template-curly-spacing
  #   - require or disallow spacing around embedded expressions of template strings
  # https://eslint.org/docs/rules/yield-star-spacing
  #   - require or disallow spacing around the * in yield* expressions
